---
import { ModeWatcher } from "mode-watcher";
import Header from "@components/Header.astro";
import "$lib/styles/app.css";
---

<script is:inline>
  const isBrowser = typeof localStorage !== "undefined";
  const getThemePreference = () => {
    if (isBrowser && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";
  };
  const isDark = getThemePreference() === "dark";
  document.documentElement.classList[isDark ? "add" : "remove"]("dark");

  if (isBrowser) {
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    });
    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ["class"],
    });
  }
</script>

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
  </head>
  <body>
    <Header />

    <div class="mx-auto max-w-screen-md">
      <main class="container mx-auto">
        <slot />
      </main>
    </div>

    <ModeWatcher client:load />
  </body>
</html>
